@page "/terminal/rede"
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar

<MudAlert Severity="Severity.Info">
    Comandos para Rede
</MudAlert>

@foreach (var card in cardContents)
{
    <MudCard Elevation="25">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">@card.Title</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent Style="@($"color:{Colors.Gray.Darken4}; background:{Colors.Gray.Lighten5};")">
            <MudIconButton Icon="@Icons.Material.Filled.FileCopy" Color="Color.Default" OnClick='()=>CopyText(card.Command)' />
            <MudText HtmlTag="code">@card.Command</MudText>
        </MudCardContent>
        <MudCardContent>
            <MudText Typo="Typo.body2">@card.Description</MudText>
        </MudCardContent>
        <MudSpacer />
    </MudCard>

    <MudDivider />
}

@code {

    List<CardContent> cardContents = new()
{
    new (){Title = "Ver endereço IP", Command="ipconfig", Description= "Use o comando para exibir informações sobre a rede, incluindo o endereço IP."},
    new (){Title = "Testar conexão", Command="ping [endereço]", Description= "Use o comando para testar a conectividade com outro dispositivo na rede."},
    new (){Title = "Ver rota de pacotes", Command="tracert [endereço]", Description= "Use o comando para exibir a rota que os pacotes percorrem até um destino."},
    new (){Title = "Ver tabelas de roteamento", Command="route print", Description= "Use o comando para exibir a tabela de roteamento da rede."},
    new (){Title = "Ver compartilhamentos de rede", Command="net share", Description= "Use o comando para exibir todos os compartilhamentos de rede no sistema."},
    new (){Title = "Configurar firewall", Command="netsh advfirewall firewall", Description= "Use o comando para configurar as regras do firewall do Windows."},
    new (){Title = "Listar conexões e portas", Command="netstat -a", Description= "Use o comando para exibir conexões e portas."},
    new (){Title = "Listar programas", Command="netstat -b", Description= "Use o comando para exibir programas que estão usando as conexões."},
    new (){Title = "Listar conexões em forma numérica", Command="netstat -n", Description= "Use o comando para exibir conexões em forma numérica."},
    new (){Title = "Ver número de série da BIOS", Command="wmic bios get serialnumber", Description= "Use o comando para exibir o número de série da BIOS."},
    new (){Title = "Sincronizar horário", Command="w32tm /resync", Description= "Use o comando para sincronizar o relógio do sistema com um servidor de horário."},
    new (){Title = "Ver permissões de arquivos", Command="icacls [nome-do-arquivo]", Description= "Use o comando para exibir as permissões de um arquivo."},
    new (){Title = "Alterar permissões de arquivos", Command="cacls [nome-do-arquivo] /P [usuário]:[permissões]", Description= "Use o comando para alterar as permissões de um arquivo."},
    new (){Title = "Resolver nome para endereço IP", Command="nslookup [nome-do-host]", Description= "Use o comando para consultar informações de DNS."},
    new (){Title = "Ver caminho detalhado", Command="pathping [endereço]", Description= "Use o comando para rastrear a rota até um destino e medir a latência e a perda de pacotes."},
    new (){Title = "Exibir cache ARP", Command="arp -a", Description= "Use o comando para exibir a tabela de cache ARP (Address Resolution Protocol)."}
};


    public class CardContent()
    {
        public string Title = string.Empty;
        public string Command = string.Empty;
        public string Description = string.Empty;
    }
    public async Task CopyText(string command)
    {
        await JSRuntime.InvokeVoidAsync("copyToClipboard", command);
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopEnd;
        Snackbar.Configuration.VisibleStateDuration = 1000;
        Snackbar.Configuration.HideTransitionDuration = 100;
        Snackbar.Configuration.ShowTransitionDuration = 1000;
        Snackbar.Add($"[ {command} ] Copied!");
    }
}