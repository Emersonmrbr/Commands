@page "/terminal/basico"
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar

<MudAlert Severity="Severity.Info">
    Comandos Básicos
</MudAlert>

@foreach (var card in cardContents)
{
    <MudCard Elevation="25">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">@card.Title</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent Style="@($"color:{Colors.Gray.Darken4}; background:{Colors.Gray.Lighten5};")">
            <MudIconButton Icon="@Icons.Material.Filled.FileCopy" Color="Color.Default" OnClick='()=>CopyText(card.Command)' />
            <MudText HtmlTag="code">@card.Command</MudText>
        </MudCardContent>
        <MudCardContent>
            <MudText Typo="Typo.body2">@card.Description</MudText>
        </MudCardContent>
        <MudSpacer />
    </MudCard>

    <MudDivider />
}

@code {

    List<CardContent> cardContents = new()
    {
        new (){Title = "Listar diretórios", Command="dir", Description= "Use o comando para listar todos os arquivos e pastas em um diretório."},
        new (){Title = "Mudar diretório", Command="cd [nome-do-diretorio]", Description= "Use o comando para mudar para um diretório específico."},
        new (){Title = "Copiar arquivos", Command="copy [arquivo-fonte] [destino]", Description= "Use o comando para copiar arquivos de um local para outro."},
        new (){Title = "Mover arquivos", Command="move [arquivo-fonte] [destino]", Description= "Use o comando para mover arquivos de um local para outro."},
        new (){Title = "Apagar arquivos", Command="del [nome-do-arquivo]", Description= "Use o comando para deletar arquivos."},
        new (){Title = "Criar diretório", Command="mkdir [nome-do-diretorio]", Description= "Use o comando para criar um novo diretório."},
        new (){Title = "Renomear arquivos", Command="ren [nome-antigo] [nome-novo]", Description= "Use o comando para renomear arquivos."},
        new (){Title = "Ver informações do sistema", Command="systeminfo", Description= "Use o comando para exibir informações detalhadas sobre o sistema."},
        new (){Title = "Limpar tela", Command="cls", Description= "Use o comando para limpar a tela do terminal."},
        new (){Title = "Ver endereço IP", Command="ipconfig", Description= "Use o comando para exibir informações sobre a rede, incluindo o endereço IP."},
        new (){Title = "Testar conexão", Command="ping [endereço]", Description= "Use o comando para testar a conectividade com outro dispositivo na rede."},
        new (){Title = "Ver rota de pacotes", Command="tracert [endereço]", Description= "Use o comando para exibir a rota que os pacotes percorrem até um destino."},
        new (){Title = "Ver tarefas em execução", Command="tasklist", Description= "Use o comando para exibir todas as tarefas em execução no sistema."},
        new (){Title = "Finalizar tarefa", Command="taskkill /IM [nome-do-processo] /F", Description= "Use o comando para finalizar uma tarefa específica."},
        new (){Title = "Verificar e reparar disco", Command="chkdsk", Description= "Use o comando para verificar e reparar erros no disco."},
        new (){Title = "Formatar disco", Command="format [unidade:]", Description= "Use o comando para formatar um disco."},
        new (){Title = "Ver tabelas de roteamento", Command="route print", Description= "Use o comando para exibir a tabela de roteamento da rede."},
        new (){Title = "Ver compartilhamentos de rede", Command="net share", Description= "Use o comando para exibir todos os compartilhamentos de rede no sistema."},
        new (){Title = "Sincronizar horário", Command="w32tm /resync", Description= "Use o comando para sincronizar o relógio do sistema com um servidor de horário."},
        new (){Title = "Configurar firewall", Command="netsh advfirewall firewall", Description= "Use o comando para configurar as regras do firewall do Windows."},
        new (){Title = "Ver espaço em disco", Command="wmic logicaldisk get size,freespace,caption", Description= "Use o comando para exibir informações sobre o espaço em disco."},
        new (){Title = "Abrir editor de registro", Command="regedit", Description= "Use o comando para abrir o Editor de Registro do Windows."},
        new (){Title = "Abrir gerenciador de tarefas", Command="taskmgr", Description= "Use o comando para abrir o Gerenciador de Tarefas."},
        new (){Title = "Ver versão do Windows", Command="ver", Description= "Use o comando para exibir a versão do Windows."},
        new (){Title = "Desligar sistema", Command="shutdown /s", Description= "Use o comando para desligar o sistema."},
        new (){Title = "Reiniciar sistema", Command="shutdown /r", Description= "Use o comando para reiniciar o sistema."},
        new (){Title = "Ver permissões de arquivos", Command="icacls [nome-do-arquivo]", Description= "Use o comando para exibir as permissões de um arquivo."},
        new (){Title = "Alterar permissões de arquivos", Command="cacls [nome-do-arquivo] /P [usuário]:[permissões]", Description= "Use o comando para alterar as permissões de um arquivo."},
        new (){Title = "Listar conexões e portas", Command="netstat -a", Description= "Use o comando para exibir conexões e portas."},
        new (){Title = "Listar programas", Command="netstat -b", Description= "Use o comando para exibir programas que estão usando as conexões."},
        new (){Title = "Listar conexões em forma numérica", Command="netstat -n", Description= "Use o comando para exibir conexões em forma numérica."},
        new (){Title = "Ver número de série da BIOS", Command="wmic bios get serialnumber", Description= "Use o comando para exibir o número de série da BIOS."},


    };
    public class CardContent()
    {
        public string Title = string.Empty;
        public string Command = string.Empty;
        public string Description = string.Empty;
    }
    public async Task CopyText(string command)
    {
        await JSRuntime.InvokeVoidAsync("copyToClipboard", command);
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopEnd;
        Snackbar.Configuration.VisibleStateDuration = 1000;
        Snackbar.Configuration.HideTransitionDuration = 100;
        Snackbar.Configuration.ShowTransitionDuration = 1000;
        Snackbar.Add($"[ {command} ] Copied!");
    }
}