@page "/git/basico"
@inject IJSRuntime JSRuntime
@inject IToastService ToastService

<h2 Severity="Severity.Info">
    Comandos Básicos
</h2>

@foreach (var card in cardContents)
{
    <FluentGrid Justify="JustifyContent.FlexStart" Style="background-color: var(--neutral-layer-3); padding: 24px;">
        <FluentCard MinimalStyle="true" Height="auto">
            <h4>@card.Title</h4>
            <FluentGridItem Justify="JustifyContent.FlexStart" style="padding: 20px">
                <FluentIcon Value="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size20.Copy())" OnClick='()=>CopyText(card.Command)' />
                <FluentBadge Appearance="Appearance.Neutral" OnClick='()=>CopyText(card.Command)'>
                    @card.Command
                </FluentBadge>
            </FluentGridItem>
            <p>@card.Description</p>
        </FluentCard>
    </FluentGrid>
}

@code {

    List<CardContent> cardContents = new()
    {
        new (){Title = "Obter Versão do Git", Command="git --version", Description= "Exibe a versão do Git instalada no sistema, útil para confirmar a instalação e verificar a versão atual."},
        new (){Title = "Obter Ajuda sobre Comandos do Git", Command="git --help", Description= "Lista os comandos disponíveis no Git e abre o manual de ajuda detalhando o uso de cada comando. Pode ser seguido por um comando específico, como git help commit, para exibir ajuda desse comando."},
        new (){Title = "Listar Configurações Globais", Command="git config --global --list", Description= "Exibe todas as configurações globais definidas no sistema, como nome de usuário e email, permitindo verificar a aplicação dessas configurações."},
        new (){Title = "Configurações de Usuário", Command="git config --global user.name \"Seu Nome\"", Description= "Define o nome e o email que aparecerão nos commits feitos neste sistema. Essas configurações são essenciais para rastrear a autoria dos commits, associando-as aos commits sempre que o Git for usado neste computador."},
        new (){Title = "Configurações de Usuário", Command="git config --global user.email \"seuemail@exemplo.com\"", Description= "Define o nome e o email que aparecerão nos commits feitos neste sistema. Essas configurações são essenciais para rastrear a autoria dos commits, associando-as aos commits sempre que o Git for usado neste computador."},
        new (){Title = "Definir VSCode como Editor Padrão", Command="git config --global core.editor \"code --wait\"", Description= "Define o VSCode como editor padrão para editar mensagens de commit e outros conteúdos solicitados pelo Git. O argumento --wait instrui o Git a aguardar o fechamento do editor antes de prosseguir."},
    };

    public class CardContent()
    {
        public string Title = string.Empty;
        public string Command = string.Empty;
        public string Description = string.Empty;
    }

    public async Task CopyText(string command)
    {
        await JSRuntime.InvokeVoidAsync("copyToClipboard", command);
        ToastService.ShowToast(ToastIntent.Success, $"[ {command} ] Copied!");
    }
}